version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    environment:
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    networks:
      - app-network
    command: ["php-fpm"]

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    environment:
      - NGINX_ENV=${APP_ENV} # Production or Development
    depends_on:
      - app
    networks:
      - app-network
    command: ["nginx", "-g", "daemon off;"]

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 30s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
